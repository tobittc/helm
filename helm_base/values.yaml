image:
  registry: us.gcr.io
  repository: flooid-tooling/official/grafana
  tag: 8.2.1
  pullPolicy: IfNotPresent
initImage:
  repository: us.gcr.io/flooid-tooling/official/grafana-init
  initTag: 1.159.0
  sha: ''
  pullPolicy: Always
  pullSecrets: null
kubeVersion: null
extraDeploy: []
hostAliases: []
clusterDomain: cluster.local
admin:
  user: admin
  existingSecretPasswordKey: password
smtp:
  enabled: false
  user: user
  password: password
  existingSecretUserKey: user
  existingSecretPasswordKey: password
plugins: blackmirror1-statusbygroup-panel,vonage-status-panel,grafana-piechart-panel,marcusolsson-hourly-heatmap-panel
ldap:
  enabled: false
  allowSignUp: false
extraEnvVars:
- name: GF_SECURITY_ADMIN_PASSWORD
  value: 9gUPuy7aQBpZ9He7
- name: GF_SECURITY_COOKIE_SECURE
  value: 'true'
- name: GF_SECURITY_COOKIE_SAMESITE
  value: none
- name: GF_SERVER_ROOT_URL
  value: '%(protocol)s://%(domain)s/grafana'
- name: GF_SERVER_SERVE_FROM_SUB_PATH
  value: 'true'
- name: GF_SECURITY_ALLOW_EMBEDDING
  value: 'true'
extraConfigmaps: {}
config:
  useGrafanaIniFile: false
  grafanaIniConfigMap: null
  grafanaIniSecret: null
dashboardsProvider:
  enabled: false
  configMapName: null
dashboardsConfigMaps: []
datasources:
  secretName: null
replicaCount: 1
updateStrategy:
  type: RollingUpdate
serviceAccount:
  create: true
  annotations: {}
podAnnotations: {}
podAffinityPreset: ''
podAntiAffinityPreset: soft
nodeAffinityPreset:
  type: ''
  key: ''
  values: []
affinity: {}
nodeSelector: {}
tolerations: []
securityContext:
  enabled: true
  runAsUser: 1001
  fsGroup: 1001
  runAsNonRoot: true
resources:
  limits: {}
  requests: {}
livenessProbe:
  enabled: true
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6
  successThreshold: 1
readinessProbe:
  enabled: true
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6
  successThreshold: 1
persistence:
  enabled: true
  accessMode: ReadWriteOnce
  size: 10Gi
sidecars: 
  - name: grafana-sidecar
    image: us.gcr.io/flooid-tooling/official/grafana-sidecar:1.19.0
    imagePullPolicy: Always
    env:
    - name: TARGET
      value: internal
    - name: GIT_BRANCH
      value: master
    - name: REFRESH
      value: "30"
    volumeMounts:
    - name: dashboards
      mountPath: /etc/dashboards/
extraVolumes: []
extraVolumeMounts:
- name: dashboards
  mountPath: /etc/dashboards/
service:
  type: NodePort
  port: 3000
  annotations: {}
ingress:
  enabled: false
  certManager: false
  pathType: ImplementationSpecific
  apiVersion: null
  hostname: grafana.local
  path: /grafana
  annotations:
    kubernetes.io/ingress.class: gce-internal
  tls: false
  secrets: []
metrics:
  enabled: false
  service:
    annotations:
      prometheus.io/scrape: 'true'
      prometheus.io/port: '3000'
      prometheus.io/path: /metrics
  serviceMonitor:
    enabled: false
imageRenderer:
  enabled: true
  image:
    registry: docker.io
    repository: bitnami/grafana-image-renderer
    tag: 2.0.1-debian-10-r72
    pullPolicy: IfNotPresent
    pullSecrets: []
  replicaCount: 1
  podAnnotations: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  securityContext:
    enabled: true
    runAsUser: 1001
    fsGroup: 1001
    runAsNonRoot: true
  service:
    port: 8080
  metrics:
    enabled: false
    annotations:
      prometheus.io/scrape: 'true'
      prometheus.io/port: '8080'
      prometheus.io/path: /metrics
    serviceMonitor:
      enabled: false
verticalPodAutoscaling:
  enabled: true
